#!/usr/bin/env python3
"""
Script para verificar el template sin depender de Django
"""

import os

def verificar_template_simple():
    print("üîç VERIFICANDO TEMPLATE SIN DEPENDER DE DJANGO")
    print("=" * 60)
    
    try:
        # 1. VERIFICAR SI EL TEMPLATE EXISTE
        print("üìä VERIFICANDO TEMPLATE...")
        
        template_path = 'car/templates/car/compras/compra_detail.html'
        if not os.path.exists(template_path):
            print(f"‚ùå Template NO existe: {template_path}")
            return
        
        print(f"‚úÖ Template existe: {template_path}")
        
        # 2. LEER EL TEMPLATE
        print(f"\nüìñ LEYENDO TEMPLATE...")
        
        with open(template_path, 'r') as f:
            template_content = f.read()
        
        print(f"‚úÖ Template le√≠do correctamente")
        print(f"  Tama√±o: {len(template_content)} caracteres")
        
        # 3. VERIFICAR L√ìGICA DEL TEMPLATE
        print(f"\nüîç VERIFICANDO L√ìGICA DEL TEMPLATE...")
        
        # Verificar si tiene la l√≥gica correcta
        if '{% if items %}' in template_content:
            print("‚úÖ Template tiene l√≥gica {% if items %}")
        else:
            print("‚ùå Template NO tiene l√≥gica {% if items %}")
        
        if '{% for item in items %}' in template_content:
            print("‚úÖ Template tiene loop {% for item in items %}")
        else:
            print("‚ùå Template NO tiene loop {% for item in items %}")
        
        if '{{ item.repuesto.nombre }}' in template_content:
            print("‚úÖ Template tiene {{ item.repuesto.nombre }}")
        else:
            print("‚ùå Template NO tiene {{ item.repuesto.nombre }}")
        
        # 4. VERIFICAR DEBUG
        print(f"\nüîç VERIFICANDO DEBUG...")
        
        if 'DEBUG:' in template_content:
            print("‚úÖ Template tiene debug agregado")
        else:
            print("‚ùå Template NO tiene debug agregado")
        
        # 5. VERIFICAR ESTRUCTURA DEL TEMPLATE
        print(f"\nüîç VERIFICANDO ESTRUCTURA DEL TEMPLATE...")
        
        # Verificar herencia
        if '{% extends' in template_content:
            print("‚úÖ Template extiende de otro template")
            # Buscar la l√≠nea de extends
            lines = template_content.split('\n')
            for i, line in enumerate(lines):
                if '{% extends' in line:
                    print(f"  L√≠nea {i+1}: {line.strip()}")
        else:
            print("‚ùå Template NO extiende de otro template")
        
        # Verificar bloques
        if '{% block' in template_content:
            print("‚úÖ Template tiene bloques")
            # Buscar bloques
            lines = template_content.split('\n')
            for i, line in enumerate(lines):
                if '{% block' in line:
                    print(f"  L√≠nea {i+1}: {line.strip()}")
        else:
            print("‚ùå Template NO tiene bloques")
        
        # 6. VERIFICAR JAVASCRIPT
        print(f"\nüîç VERIFICANDO JAVASCRIPT...")
        
        if 'actualizarListadoItems' in template_content:
            print("‚úÖ Template tiene funci√≥n actualizarListadoItems")
        else:
            print("‚ùå Template NO tiene funci√≥n actualizarListadoItems")
        
        if 'fetch(' in template_content:
            print("‚úÖ Template tiene llamadas fetch")
        else:
            print("‚ùå Template NO tiene llamadas fetch")
        
        # 7. VERIFICAR ESTRUCTURA DE LA TABLA
        print(f"\nüîç VERIFICANDO ESTRUCTURA DE LA TABLA...")
        
        if '<table' in template_content:
            print("‚úÖ Template tiene tabla")
        else:
            print("‚ùå Template NO tiene tabla")
        
        if '<thead>' in template_content:
            print("‚úÖ Template tiene thead")
        else:
            print("‚ùå Template NO tiene thead")
        
        if '<tbody>' in template_content:
            print("‚úÖ Template tiene tbody")
        else:
            print("‚ùå Template NO tiene tbody")
        
        # 8. VERIFICAR ESTRUCTURA ESPEC√çFICA
        print(f"\nüîç VERIFICANDO ESTRUCTURA ESPEC√çFICA...")
        
        # Buscar la secci√≥n de items
        if 'Items de la Compra' in template_content:
            print("‚úÖ Template tiene secci√≥n 'Items de la Compra'")
        else:
            print("‚ùå Template NO tiene secci√≥n 'Items de la Compra'")
        
        # Buscar la l√≥gica de mostrar items
        if '{% if items %}' in template_content and '{% else %}' in template_content:
            print("‚úÖ Template tiene l√≥gica if/else para items")
        else:
            print("‚ùå Template NO tiene l√≥gica if/else para items")
        
        # 9. DIAGN√ìSTICO FINAL
        print(f"\nüîç DIAGN√ìSTICO FINAL...")
        
        # Verificar si el template tiene la estructura correcta
        estructura_correcta = (
            '{% if items %}' in template_content and
            '{% for item in items %}' in template_content and
            '{{ item.repuesto.nombre }}' in template_content and
            '<table' in template_content
        )
        
        if estructura_correcta:
            print("‚úÖ Template tiene estructura correcta")
            print("‚úÖ La l√≥gica del template deber√≠a funcionar")
            print("‚ùå Pero no se muestran los items en el navegador")
            
            print(f"\n  üîç POSIBLES CAUSAS:")
            print(f"    1. La vista no est√° pasando 'items' al contexto")
            print(f"    2. La variable 'items' est√° vac√≠a en el template")
            print(f"    3. Hay un problema con la herencia del template")
            print(f"    4. Hay un problema con el JavaScript AJAX")
            print(f"    5. Hay un problema con el cache del navegador")
            
            print(f"\n  üí° SOLUCIONES A PROBAR:")
            print(f"    1. Verificar que el debug aparezca en el navegador")
            print(f"    2. Verificar que no haya errores en la consola del navegador")
            print(f"    3. Verificar que la URL sea correcta")
            print(f"    4. Verificar que la vista se est√© ejecutando")
            print(f"    5. Refrescar la p√°gina (F5) para ver si aparece el debug")
        else:
            print("‚ùå Template NO tiene estructura correcta")
            print("üí° El problema est√° en el template")
        
        print(f"\nüéâ ¬°VERIFICACI√ìN COMPLETADA!")
        print("=" * 60)
        print("üìã RESUMEN:")
        print(f"  ‚úÖ Template existe y se puede leer")
        print(f"  ‚úÖ Template tiene estructura b√°sica")
        print(f"  ‚úÖ Template tiene l√≥gica para items")
        print(f"  ‚úÖ Template tiene debug agregado")
        print(f"  ‚ùå Pero no se muestran los items en el navegador")
        print(f"  üí° El problema est√° en la vista o en el contexto")
        
    except Exception as e:
        print(f"‚ùå Error: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    verificar_template_simple()



